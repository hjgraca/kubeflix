# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
    branches: [ main ]
  
  push:
    branches: [ main ]
  
  workflow_dispatch:
  
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          ad-api:
            - 'src/ad-api/**'

  build:
    needs: [changes]
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['frontend', 'basket-api'] if both components folders contains changes
        component: ${{ fromJSON(needs.changes.outputs.components) }}
    runs-on: ubuntu-latest
    steps:   
      - uses: amannn/action-semantic-pull-request@v3.4.0
        if: ${{ github.event.pull_request }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Label PRs
        uses: adamzolyak/monorepo-pr-labeler-action@patching
        if: ${{ github.event.pull_request }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_DIRS: 'src'
        with:
          prefix: ''
          
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build
        uses: docker/build-push-action@v2
        if: ${{ github.event.pull_request }}
        with:
          context: src/${{ matrix.component }}
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.component }}:${{ github.sha }}
          
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scan-ref: src/${{ matrix.component }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        if: ${{ github.event_name == 'push' }}
        with:
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@1.26.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WITH_V: true
      #     SOURCE: src/${{ matrix.component }}
      
      # - name: Create a GitHub release
      #   uses: actions/create-release@v1
      #   if: ${{ github.event.push }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ steps.tag_version.outputs.new_tag }}
      #     release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      #     body: ${{ steps.tag_version.outputs.changelog }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   if: ${{ github.event.push }}
      #   with:
      #     context: src/${{ matrix.component }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.component }}:${{ github.sha }}
